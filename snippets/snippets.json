{
	"Register Tutorial with Didact": {
		"prefix": "didact",
    "body": [
      "async function registerTutorialWithDidact(context: vscode.ExtensionContext) {",
      "\ttry {",
      "\t\t// test to ensure didact is available ",
      "\t\tconst extensionId = 'redhat.vscode-didact';",
      "\t\tconst didactExt : any = vscode.extensions.getExtension(extensionId);",
      "\t\tif (didactExt) {",
      "\t\t\tconst commandId = 'vscode.didact.register';",
      "\t\t\tconst tutorialName = `${1:Your First Integration}`; // replace this with the name of your integration to appear in the Didact view",
      "\t\t\tconst tutorialPath = path.resolve(context.extensionPath, `${2:./path/to/tutorial.didact.md|adoc}`); // replace this path with the location of your Didact file like ./path/to/tutorial.didact.md or ./path/to/tutorial.didact.adoc",
      "\t\t\tconst tutorialUri = vscode.Uri.file(`${tutorialPath\\}`);",
      "\t\t\tconst tutorialCategory = `${3:Your Tutorial Category}`; // replace this with the name of the category for your tutorial",
      "",
      "\t\t\t// then pass name, uri, and category",
      "\t\t\tawait vscode.commands.executeCommand(",
      "\t\t\t\tcommandId,",
      "\t\t\t\ttutorialName, ",
      "\t\t\t\ttutorialUri,",
      "\t\t\t\ttutorialCategory);",
      "\t\t}",
      "\t} catch (error) {",
      "\t\tconsole.log(error);",
      "\t}",
      "}"
    ],
		"description": "Register tutorial with Didact"
	}
}